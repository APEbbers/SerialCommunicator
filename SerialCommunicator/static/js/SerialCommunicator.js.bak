/*
 * View model for SerialCommunicator
 *
 * Author: A.P. Ebbers
 * License: AGPLv3
 */
$(function () {
    function SerialCommunicatorViewModel(parameters) {
        var self = this;

        self.settings = parameters[0]; // requested as second dependency below

        self.command_definitions = ko.observableArray();

        self.addCommandDefinition = function () {
            self.command_definitions.push({ action_name: 0, action_params: "" });
        };

        self.removeCommandDefinition = function (definition) {
            self.command_definitions.remove(definition);
        };

        self.onBeforeBinding = function () {
            self.settings.plugins.SerialCommunicator.command_definitions.subscribe(function () {
                settings = self.settings.plugins.SerialCommunicator;
                self.command_definitions(settings.command_definitions.slice(0))
            });
            self.settings.plugins.SerialCommunicator.command_definitions.valueHasMutated();
        };

        self.onSettingsBeforeSave = function () {
            self.settings.plugins.SerialCommunicator.command_definitions(self.command_definitions.slice(0));
        };

    }

    // // This is how our plugin registers itself with the application, by adding some configuration
    // // information to the global variable OCTOPRINT_VIEWMODELS
    // OCTOPRINT_VIEWMODELS.push([
    //     // This is the constructor to call for instantiating the plugin
    //     SerialCommunicatorViewModel,

    //     // This is a list of dependencies to inject into the plugin, the order which you request
    //     // here is the order in which the dependencies will be injected into your view model upon
    //     // instantiation via the parameters argument
    //     ["settingsViewModel"],

    //     // Finally, this is the list of selectors for all elements we want this viewmodel to be bound to.
    //     ["#settings_plugin_SerialCommunicator"]
    // ]);
    OCTOPRINT_VIEWMODELS.push({
        construct: SerialCommunicatorViewModel,
        additionalNames: ["SerialCommunicatorViewModel"],
        dependencies: ["settingsViewModel"],
        elements: ["#settings_plugin_SerialCommunicator"]
    });
});